Eloquent还支持将一些常用的查询封装到模型方法中，方便调用，我们将其称之为“查询作用域”，实现查询作用域很简单，只需要在模型方法前加上scope前缀即可，比如我们经常需要获取浏览数最高的文章，就可以使用该机制实现——在Post中定义一个scopePopular方法：

public function scopePopular($query)
{
    return $query->where('views','>=',100);
}
对应的，我们在控制器中定义测试代码如下：

$posts = Post::popular()->orderBy('views','desc')->get();
foreach ($posts as $post) {
    echo '&lt;'.$post->title.'&gt; '.$post->views.'views<br>';
}
在浏览器中访问http://laravel.app:8000/test，输出如下：

<test 3> 800views
<test 2> 500views
<test 1 title> 100views
此外，查询作用域还支持动态传入参数，为了测试该方法我们为posts新增一个status字段：

为posts表添加status字段

同时在模型类中新增一个scopeStatus方法：

public function scopeStatus($query,$status=1)
{
    return $query->where('status',$status);
}
接下来测试下该方法：

$posts = Post::popular()->status(1)->orderBy('views','desc')->get();
foreach ($posts as $post) {
     echo '&lt;'.$post->title.'&gt; '.$post->views.'views<br>';
}
对应输出如下：

<test 3> 800views
<test 2> 500views

